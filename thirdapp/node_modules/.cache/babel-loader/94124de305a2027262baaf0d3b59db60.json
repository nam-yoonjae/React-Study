{"ast":null,"code":"var _jsxFileName = \"/Users/cheeeeze/git/React-study/thirdapp/src/InputSample2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction InputSample2() {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    username: '',\n    nickname: ''\n  }); // 객체 형태로 두 input 태그의 name 속성의 초기값을 설정해준다.\n\n  const {\n    username,\n    nickname\n  } = inputs; //inputs 상태값을 destructuring 하여 두 name 값을 추출한다.\n  // 그니까 useState 를 이용한 inputs 의 값을 쪼개서 가져온다는 뜻인듯??\n\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target; // 이벤트 타겟의 속성 value 와 name 값을 추출한다.\n    // 이벤트가 일어났을때 그 객체의 value 값과 name 값을 뽑아내는듯??\n\n    setInputs({ ...inputs,\n      [name]: value // inputs[name]=value 와 같이 직접 리액트 객체를 수정할 수 없다.\n      // 대신 spread 문법을 이용하여 (전체 복사) ...inputs, 기존 객체를 복사하여 새로운 객체를 만들고,\n      // 이 새로운 객체에서 상태를 업데이트 [name] : value 한다.\n      // 여기서 input 객체의 attribute값인 name은 \"username\" 도 있고 \"nickname\" 도 있으므로\n      // 대괄호로 배열처리한다.   \n\n    });\n  };\n\n  const onReset = () => {\n    setInputs({\n      username: '',\n      nickname: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        onChange: onChange,\n        value: username,\n        placeholder: \"\\uC774\\uB984\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"nickname\",\n        onChange: onChange,\n        value: nickname,\n        placeholder: \"\\uB2C9\\uB124\\uC784\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onReset,\n        children: \"\\uCD08\\uAE30\\uD654\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"\\uAC12 : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [username, \"(\", nickname, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(InputSample2, \"7RkT409kHcjSnBTctnNTrH2oGlw=\");\n\n_c = InputSample2;\nexport default InputSample2;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSample2\");","map":{"version":3,"sources":["/Users/cheeeeze/git/React-study/thirdapp/src/InputSample2.js"],"names":["React","useState","InputSample2","inputs","setInputs","username","nickname","onChange","e","value","name","target","onReset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAEA,SAASC,YAAT,GAAyB;AAAA;;AAErB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC;AACjCI,IAAAA,QAAQ,EAAG,EADsB;AAE/BC,IAAAA,QAAQ,EAAG;AAFoB,GAAD,CAApC,CAFqB,CAKjB;;AAEJ,QAAM;AAACD,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAuBH,MAA7B,CAPqB,CAOgB;AACA;;AAErC,QAAMI,QAAQ,GAAIC,CAAD,IAAO;AACpB,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAgBF,CAAC,CAACG,MAAxB,CADoB,CACa;AACD;;AAChCP,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACO,IAAD,GAASD,KAFH,CAGN;AACA;AACA;AACA;AACA;;AAPM,KAAD,CAAT;AASH,GAZD;;AAcA,QAAMG,OAAO,GAAG,MAAM;AAClBR,IAAAA,SAAS,CAAC;AACNC,MAAAA,QAAQ,EAAG,EADL;AAEJC,MAAAA,QAAQ,EAAG;AAFP,KAAD,CAAT;AAIH,GALD;;AAOA,sBACI;AAAA,2BACI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAEC,QAAjC;AAA2C,QAAA,KAAK,EAAEF,QAAlD;AAA4D,QAAA,WAAW,EAAC;AAAxE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAEE,QAAjC;AAA2C,QAAA,KAAK,EAAED,QAAlD;AAA4D,QAAA,WAAW,EAAC;AAAxE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAEM,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,qBAAOP,QAAP,OAAkBC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAcH;;GA7CQJ,Y;;KAAAA,Y;AA+CT,eAAeA,YAAf","sourcesContent":["import React, {useState} from 'react';\n\nfunction InputSample2 () {\n\n    const [inputs, setInputs] = useState({\n        username : ''\n        , nickname : ''\n    }); // 객체 형태로 두 input 태그의 name 속성의 초기값을 설정해준다.\n \n    const {username, nickname} = inputs; //inputs 상태값을 destructuring 하여 두 name 값을 추출한다.\n                                         // 그니까 useState 를 이용한 inputs 의 값을 쪼개서 가져온다는 뜻인듯??\n\n    const onChange = (e) => {\n        const {value, name} = e.target;  // 이벤트 타겟의 속성 value 와 name 값을 추출한다.\n                                        // 이벤트가 일어났을때 그 객체의 value 값과 name 값을 뽑아내는듯??\n        setInputs({\n            ...inputs,\n            [name] : value \n            // inputs[name]=value 와 같이 직접 리액트 객체를 수정할 수 없다.\n            // 대신 spread 문법을 이용하여 (전체 복사) ...inputs, 기존 객체를 복사하여 새로운 객체를 만들고,\n            // 이 새로운 객체에서 상태를 업데이트 [name] : value 한다.\n            // 여기서 input 객체의 attribute값인 name은 \"username\" 도 있고 \"nickname\" 도 있으므로\n            // 대괄호로 배열처리한다.   \n        });\n    }\n\n    const onReset = () => {\n        setInputs({\n            username : ''\n            , nickname : ''\n        });\n    }\n\n    return (\n        <>\n            <div>\n                <input name=\"username\" onChange={onChange} value={username} placeholder=\"이름\"/>\n                <input name=\"nickname\" onChange={onChange} value={nickname} placeholder=\"닉네임\"/>\n                <button onClick={onReset}>초기화</button>\n                <div>\n                    <b>값 : </b>\n                    <span>{username}({nickname})</span>\n                </div>\n            </div>\n\n        </>\n    );\n}\n\nexport default InputSample2;"]},"metadata":{},"sourceType":"module"}